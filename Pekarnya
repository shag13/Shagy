from dotenv import load_dotenv
import telebot
from telebot import types
import qrcode
import io
import os

load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(os.getenv('TOKEN_PEKARNYA'))

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_carts = {}
user_bonuses = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ)
selected_items = {}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    if user_id not in user_carts:
        user_carts[user_id] = {}
        user_bonuses[user_id] = 100  # –ù–∞—á–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã
    welcome_text = (
        "üç∞ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –ø–µ–∫–∞—Ä–Ω—é!* ü•ê\n\n"
        "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —É—é—Ç–Ω–æ–º —É–≥–æ–ª–∫–µ —Å–≤–µ–∂–µ–π –≤—ã–ø–µ—á–∫–∏ –∏ –≤–∫—É—Å–Ω–µ–π—à–∏—Ö –¥–µ—Å–µ—Ä—Ç–æ–≤. "
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å—ë, —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:"
    )
    bot.reply_to(message, welcome_text, parse_mode="Markdown")
    main_menu(message)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üçû –í—ã–ø–µ—á–∫–∞')
    itembtn2 = types.KeyboardButton('üç∞ –î–µ—Å–µ—Ä—Ç—ã')
    itembtn3 = types.KeyboardButton('‚òï –ù–∞–ø–∏—Ç–∫–∏')
    itembtn4 = types.KeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞')
    itembtn5 = types.KeyboardButton('üéÅ –ë–æ–Ω—É—Å—ã')
    itembtn6 = types.KeyboardButton('üìç –ê–¥—Ä–µ—Å–∞')
    itembtn7 = types.KeyboardButton('üîó –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã')
    itembtn8 = types.KeyboardButton('ü§ñ –ó–ê–ö–ê–ó–ê–¢–¨ –ë–û–¢–ê')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn6, itembtn7, itembtn8)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    if message.text == "üçû –í—ã–ø–µ—á–∫–∞":
        handle_bakery(message)
    elif message.text == "üç∞ –î–µ—Å–µ—Ä—Ç—ã":
        handle_desserts(message)
    elif message.text == "‚òï –ù–∞–ø–∏—Ç–∫–∏":
        handle_drinks(message)
    elif message.text == "üõí –ö–æ—Ä–∑–∏–Ω–∞":
        handle_cart(message)
    elif message.text == "üéÅ –ë–æ–Ω—É—Å—ã":
        handle_bonuses(message)
    elif message.text == "üìç –ê–¥—Ä–µ—Å–∞":
        handle_addresses(message)
    elif message.text == "üîó –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã":
        handle_referral_link(message)
    elif message.text == "ü§ñ –ó–ê–ö–ê–ó–ê–¢–¨ –ë–û–¢–ê":
        handle_order_bot(message)
    elif message.text.isdigit():  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á–∏—Å–ª–æ
        handle_quantity(message)
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üçû –í—ã–ø–µ—á–∫–∞"
def handle_bakery(message):
    bakery_text = (
        "üçû *–ù–∞—à–∞ –≤—ã–ø–µ—á–∫–∞:*\n\n"
        "1. ü•ê –ö—Ä—É–∞—Å—Å–∞–Ω —Å–ª–∞–¥–∫–∏–π - 100—Ä\n"
        "   –ù–µ–∂–Ω—ã–π –∏ —Ö—Ä—É—Å—Ç—è—â–∏–π –∫—Ä—É–∞—Å—Å–∞–Ω —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ —à–æ–∫–æ–ª–∞–¥–∞ –∏–ª–∏ –¥–∂–µ–º–∞.\n\n"
        "2. ü•© –ö—Ä—É–∞—Å—Å–∞–Ω —Å –º—è—Å–æ–º - 120—Ä\n"
        "   –°—ã—Ç–Ω—ã–π –∫—Ä—É–∞—Å—Å–∞–Ω —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ —Å–æ—á–Ω–æ–≥–æ –º—è—Å–∞ –∏ —Å–ø–µ—Ü–∏–π.\n\n"
        "3. üå≠ –°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ - 90—Ä\n"
        "   –ê–ø–ø–µ—Ç–∏—Ç–Ω–∞—è —Å–æ—Å–∏—Å–∫–∞, –∑–∞–ø–µ—á–µ–Ω–Ω–∞—è –≤ —Å–ª–æ–µ–Ω–æ–º —Ç–µ—Å—Ç–µ.\n\n"
        "4. ü•î –ë—É–ª–æ—á–∫–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π - 70—Ä\n"
        "   –ú—è–≥–∫–∞—è –±—É–ª–æ—á–∫–∞ —Å –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è –∏ –∑–µ–ª–µ–Ω–∏.\n\n"
        "5. ü•¨ –ü–∏—Ä–æ–∂–æ–∫ —Å –∫–∞–ø—É—Å—Ç–æ–π - 10—Ä\n"
        "   –ü–∏—Ä–æ–∂–æ–∫ —Å —Ç—É—à–µ–Ω–æ–π –∫–∞–ø—É—Å—Ç–æ–π, –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–ª—è –ø–µ—Ä–µ–∫—É—Å–∞.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤—ã–ø–µ—á–∫—É:"
    )
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("ü•ê –ö—Ä—É–∞—Å—Å–∞–Ω —Å–ª–∞–¥–∫–∏–π - 100—Ä", callback_data="–ö—Ä—É–∞—Å—Å–∞–Ω —Å–ª–∞–¥–∫–∏–π"))
    markup.add(types.InlineKeyboardButton("ü•© –ö—Ä—É–∞—Å—Å–∞–Ω —Å –º—è—Å–æ–º - 120—Ä", callback_data="–ö—Ä—É–∞—Å—Å–∞–Ω —Å –º—è—Å–æ–º"))
    markup.add(types.InlineKeyboardButton("üå≠ –°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ - 90—Ä", callback_data="–°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ"))
    markup.add(types.InlineKeyboardButton("ü•î –ë—É–ª–æ—á–∫–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π - 70—Ä", callback_data="–ë—É–ª–æ—á–∫–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π"))
    markup.add(types.InlineKeyboardButton("ü•¨ –ü–∏—Ä–æ–∂–æ–∫ —Å –∫–∞–ø—É—Å—Ç–æ–π - 10—Ä", callback_data="–ü–∏—Ä–æ–∂–æ–∫ —Å –∫–∞–ø—É—Å—Ç–æ–π"))
    bot.send_message(message.chat.id, bakery_text, reply_markup=markup, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üç∞ –î–µ—Å–µ—Ä—Ç—ã"
def handle_desserts(message):
    desserts_text = (
        "üç∞ *–ù–∞—à–∏ –¥–µ—Å–µ—Ä—Ç—ã:*\n\n"
        "1. üç∞ –ß–∏–∑–∫–µ–π–∫ - 120—Ä\n"
        "   –ù–µ–∂–Ω—ã–π —á–∏–∑–∫–µ–π–∫ —Å –≤–∞–Ω–∏–ª—å–Ω—ã–º –≤–∫—É—Å–æ–º –∏ —Ö—Ä—É—Å—Ç—è—â–µ–π –æ—Å–Ω–æ–≤–æ–π.\n\n"
        "2. üéÇ –ö—É—Å–æ–∫ —Ç–æ—Ä—Ç–∞ - 150—Ä\n"
        "   –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –∫—É—Å–æ–∫ —Ç–æ—Ä—Ç–∞ —Å —à–æ–∫–æ–ª–∞–¥–Ω—ã–º –∏–ª–∏ —Ñ—Ä—É–∫—Ç–æ–≤—ã–º –≤–∫—É—Å–æ–º.\n\n"
        "3. üßÅ –ü–∏—Ä–æ–∂–µ–Ω–∫–∞ - 130—Ä\n"
        "   –ú–∏–Ω–∏-–ø–∏—Ä–æ–∂–Ω–æ–µ —Å –∫—Ä–µ–º–æ–≤–æ–π –Ω–∞—á–∏–Ω–∫–æ–π –∏ —è–≥–æ–¥–Ω—ã–º —Ç–æ–ø–ø–∏–Ω–≥–æ–º.\n\n"
        "4. üåà –ö—É—Å–æ—á–µ–∫ —Ä–∞–¥—É–≥–∏ - 1000—Ä\n"
        "   –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –¥–µ—Å–µ—Ä—Ç —Å —è—Ä–∫–∏–º–∏ —Å–ª–æ—è–º–∏ –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º –≤–∫—É—Å–æ–º.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ—Å–µ—Ä—Ç:"
    )
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üç∞ –ß–∏–∑–∫–µ–π–∫ - 120—Ä", callback_data="–ß–∏–∑–∫–µ–π–∫"))
    markup.add(types.InlineKeyboardButton("üéÇ –ö—É—Å–æ–∫ —Ç–æ—Ä—Ç–∞ - 150—Ä", callback_data="–ö—É—Å–æ–∫ —Ç–æ—Ä—Ç–∞"))
    markup.add(types.InlineKeyboardButton("üßÅ –ü–∏—Ä–æ–∂–µ–Ω–∫–∞ - 130—Ä", callback_data="–ü–∏—Ä–æ–∂–µ–Ω–∫–∞"))
    markup.add(types.InlineKeyboardButton("üåà –ö—É—Å–æ—á–µ–∫ —Ä–∞–¥—É–≥–∏ - 1000—Ä", callback_data="–ö—É—Å–æ—á–µ–∫ —Ä–∞–¥—É–≥–∏"))
    bot.send_message(message.chat.id, desserts_text, reply_markup=markup, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "‚òï –ù–∞–ø–∏—Ç–∫–∏"
def handle_drinks(message):
    drinks_text = (
        "‚òï *–ù–∞—à–∏ –Ω–∞–ø–∏—Ç–∫–∏:*\n\n"
        "1. ‚òï –ö–æ—Ñ–µ - 130—Ä\n"
        "   –ê—Ä–æ–º–∞—Ç–Ω—ã–π –∫–æ—Ñ–µ, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∏–∑ —Å–≤–µ–∂–µ–æ–±–∂–∞—Ä–µ–Ω–Ω—ã—Ö –∑–µ—Ä–µ–Ω.\n\n"
        "2. üçµ –ß–∞–π - 80—Ä\n"
        "   –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —á–∞–π —Å –≤—ã–±–æ—Ä–æ–º —á–µ—Ä–Ω–æ–≥–æ, –∑–µ–ª–µ–Ω–æ–≥–æ –∏–ª–∏ —Ç—Ä–∞–≤—è–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞.\n\n"
        "3. ü•§ –ú–∏–ª–∫—à–µ–π–∫ - 190—Ä\n"
        "   –û—Å–≤–µ–∂–∞—é—â–∏–π –º–∏–ª–∫—à–µ–π–∫ —Å –≤–∞–Ω–∏–ª—å–Ω—ã–º, —à–æ–∫–æ–ª–∞–¥–Ω—ã–º –∏–ª–∏ –∫–ª—É–±–Ω–∏—á–Ω—ã–º –≤–∫—É—Å–æ–º.\n\n"
        "4. üíß –°–≤—è—Ç–∞—è –≤–æ–¥–∞ - 20—Ä\n"
        "   –û—Å–≤—è—â–µ–Ω–Ω–∞—è –≤–æ–¥–∞ –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –¥—É—Ö–∞ –∏ —Ç–µ–ª–∞.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫:"
    )
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("‚òï –ö–æ—Ñ–µ - 130—Ä", callback_data="–ö–æ—Ñ–µ"))
    markup.add(types.InlineKeyboardButton("üçµ –ß–∞–π - 80—Ä", callback_data="–ß–∞–π"))
    markup.add(types.InlineKeyboardButton("ü•§ –ú–∏–ª–∫—à–µ–π–∫ - 190—Ä", callback_data="–ú–∏–ª–∫—à–µ–π–∫"))
    markup.add(types.InlineKeyboardButton("üíß –°–≤—è—Ç–∞—è –≤–æ–¥–∞ - 20—Ä", callback_data="–°–≤—è—Ç–∞—è –≤–æ–¥–∞"))
    bot.send_message(message.chat.id, drinks_text, reply_markup=markup, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üõí –ö–æ—Ä–∑–∏–Ω–∞"
def handle_cart(message):
    user_id = message.from_user.id
    cart = user_carts.get(user_id, {})
    if not cart:
        bot.send_message(message.chat.id, "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
    else:
        total = 0
        cart_text = "üõí *–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:*\n\n"
        for item, quantity in cart.items():
            price = get_price(item)
            total += price * quantity
            cart_text += f"{item} - {quantity}—à—Ç. ({price * quantity}—Ä)\n"
        cart_text += f"\nüíµ *–û–±—â–∞—è —Å—É–º–º–∞:* {total}—Ä"
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart"))
        markup.add(types.InlineKeyboardButton("üí≥ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ–ø–ª–∞—Ç—ã", callback_data="payment_functionality"))
        bot.send_message(message.chat.id, cart_text, reply_markup=markup, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üéÅ –ë–æ–Ω—É—Å—ã"
def handle_bonuses(message):
    user_id = message.from_user.id
    bonuses = user_bonuses.get(user_id, 100)
    bonuses_text = (
        "üéÅ *–í–∞—à–∏ –±–æ–Ω—É—Å—ã:*\n\n"
        f"–£ –≤–∞—Å –Ω–∞–∫–æ–ø–ª–µ–Ω–æ: *{bonuses} –±–∞–ª–ª–æ–≤*.\n\n"
        "üí° *–ü—Ä–∞–≤–∏–ª–∞ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:*\n"
        "1. –ó–∞ –∫–∞–∂–¥—É—é –ø–æ–∫—É–ø–∫—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10 –±–∞–ª–ª–æ–≤.\n"
        "2. 100 –±–∞–ª–ª–æ–≤ = 10 —Ä—É–±–ª–µ–π —Å–∫–∏–¥–∫–∏.\n"
        "3. –ë–∞–ª–ª—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–æ–≤."
    )
    bot.send_message(message.chat.id, bonuses_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìç –ê–¥—Ä–µ—Å–∞"
def handle_addresses(message):
    addresses_text = (
        "üìç *–ù–∞—à–∏ –ø–µ–∫–∞—Ä–Ω–∏:*\n\n"
        "1. üè† –£–ª–∏—Ü–∞ –ü—É—à–∫–∏–Ω–∞, –¥–æ–º 10\n"
        "2. üè† –£–ª–∏—Ü–∞ –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞, –¥–æ–º 15\n"
        "3. üè† –£–ª–∏—Ü–∞ –ì–æ–≥–æ–ª—è, –¥–æ–º 20\n\n"
        "üïí –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: —Å 8:00 –¥–æ 22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ."
    )
    bot.send_message(message.chat.id, addresses_text, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üîó –ú–æ—è —Å—Å—ã–ª–∫–∞"
def handle_referral_link(message):
    user_id = message.from_user.id
    referral_link = f"https://t.me/your_bot_username?start={user_id}"
    bot.send_message(message.chat.id, f"üîó *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n{referral_link}", parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "ü§ñ –ó–ê–ö–ê–ó–ê–¢–¨ –ë–û–¢–ê"
def handle_order_bot(message):
    bot.send_message(message.chat.id, "ü§ñ –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞–∫–∞–∑–∞ –±–æ—Ç–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º: @Shag13888")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    user_id = call.from_user.id
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
    if call.data == "clear_cart":
        user_carts[user_id] = {}
        bot.answer_callback_query(call.id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞")
        bot.delete_message(call.message.chat.id, call.message.message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        handle_cart(call.message)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –æ–ø–ª–∞—Ç—ã
    elif call.data == "payment_functionality":
        bot.send_message(call.message.chat.id, "üí≥ –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ–ø–ª–∞—Ç—ã.")
        bot.answer_callback_query(call.id)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ (–≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ)
    else:
        item = call.data
        selected_items[user_id] = item
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:")
        bot.answer_callback_query(call.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
def handle_quantity(message):
    user_id = message.from_user.id
    if user_id in selected_items:
        item = selected_items[user_id]
        quantity = int(message.text)
        if quantity > 0:
            user_carts[user_id][item] = user_carts[user_id].get(item, 0) + quantity
            price = get_price(item)
            total = price * quantity
            bot.send_message(message.chat.id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {item} - {quantity}—à—Ç. ({total}—Ä)")
            del selected_items[user_id]  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ
        else:
            bot.send_message(message.chat.id, "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
    else:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –≤—ã–±—Ä–∞–Ω.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
def get_price(item):
    prices = {
        "–ö—Ä—É–∞—Å—Å–∞–Ω —Å–ª–∞–¥–∫–∏–π": 100,
        "–ö—Ä—É–∞—Å—Å–∞–Ω —Å –º—è—Å–æ–º": 120,
        "–°–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ": 90,
        "–ë—É–ª–æ—á–∫–∞ —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π": 70,
        "–ü–∏—Ä–æ–∂–æ–∫ —Å –∫–∞–ø—É—Å—Ç–æ–π": 10,
        "–ß–∏–∑–∫–µ–π–∫": 120,
        "–ö—É—Å–æ–∫ —Ç–æ—Ä—Ç–∞": 150,
        "–ü–∏—Ä–æ–∂–µ–Ω–∫–∞": 130,
        "–ö—É—Å–æ—á–µ–∫ —Ä–∞–¥—É–≥–∏": 1000,
        "–ö–æ—Ñ–µ": 130,
        "–ß–∞–π": 80,
        "–ú–∏–ª–∫—à–µ–π–∫": 190,
        "–°–≤—è—Ç–∞—è –≤–æ–¥–∞": 20,
    }
    return prices.get(item, 0)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
